name: Create Release and Build

on:
  release:
    types: [created]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      releases: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run Presubmit Checks
        uses: './'
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .github/presubmitchecks.json
      - name: Gradle Project Checks
        run: ./gradlew check
        shell: bash

      - name: Build Artifacts
        run: ./gradlew :presubmitchecks-cli:distZip :presubmitchecks-cli:fatJar
        # presubmitchecks-cli/build/distributions/presubmitchecks-cli.zip
        # presubmitchecks-cli/build/libs/presubmitchecks-cli-standalone.jar

      - name: Create/Update Release with Artifact
        uses: softprops/action-gh-release@v2
        with:
          files: ./build/libs/foo.jar
          name: ${{ github.event.release.name }}
          tag_name: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}
          draft: false
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
        # https://github.com/softprops/action-gh-release?tab=readme-ov-file

      - name: Create Release Notes
        id: release_notes
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const release = context.payload.release;
            const releaseNotes = `Release ${release.tag_name}\n\n${release.body || 'No release notes provided.'}`;
            return releaseNotes;

      - name: Update Release With Notes
        if: steps.release_notes.outcome == 'success'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const release = context.payload.release;
            const releaseNotes = steps.release_notes.outputs.return;
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.id,
              body: releaseNotes
            });